[{"/Users/pkamanboina/my-app/src/index.js":"1","/Users/pkamanboina/my-app/src/App.js":"2","/Users/pkamanboina/my-app/src/reportWebVitals.js":"3","/Users/pkamanboina/my-app/src/Body.js":"4"},{"size":499,"mtime":1612550617230,"results":"5","hashOfConfig":"6"},{"size":255,"mtime":1612655548995,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1612285249593,"results":"8","hashOfConfig":"6"},{"size":1591,"mtime":1612551219826,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12l6cep",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/pkamanboina/my-app/src/index.js",[],["20","21"],"/Users/pkamanboina/my-app/src/App.js",[],"/Users/pkamanboina/my-app/src/reportWebVitals.js",[],"/Users/pkamanboina/my-app/src/Body.js",["22"],"import React from \"react\"\nimport Spotify from \"spotify-web-api-js\";\n\nconst spotify = new Spotify();\nlet params\nlet token\nclass Body extends React.Component{\n\n  constructor() {\n    super()\n    params = this.getHashParams();\n    token = params.access_token;\n    console.log(token)\n    this.state = {\n        isLoggedIn: params.access_token ? true : false,\n        topTracks: []\n    }\n\n    if(params.access_token) {\n        spotify.setAccessToken(params.access_token)\n    }\n}\n\n   /* returns info such as access token after user logs in. If login fails,\n    access token does not exist.\n   */\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n    getTopTracks() {\n        spotify.getMyTopTracks(token).then((ans) => {\n            this.setState({\n                topTracks: ans.item\n            })\n            });\n    }\n  \n  \n  render() {\n    \n    // FIXME: removes button if user is logged in -- still needs work\n    const styles = {\n        display: this.state.isLoggedIn ? \"none\" : \"blocked\"\n    }\n    return (\n      <div>\n        <button onClick={handleClick} style={styles}> Login </button>\n        <hr />\n        <br/>\n        <button onClick={() => this.getTopTracks()}>Top Tracks</button>\n                <p>\n                    {this.state.topTracks}\n                </p>\n      </div>\n    );\n  }\n}\n\nfunction handleClick() {\n  window.open(\"http://localhost:8888\");\n}\n\n\n\n\n\nexport default Body\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":31,"column":13,"nodeType":"29","messageId":"30","endLine":31,"endColumn":26},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation"]